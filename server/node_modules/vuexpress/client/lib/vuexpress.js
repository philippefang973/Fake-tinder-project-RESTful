import Vue from 'vue'
import createStore from './store'
import createRouter from './router'
import App from './components/app.vue'
import http from './http'

const mixins = {
  http
}

Vue.mixin({
  beforeCreate() {
    let options = this.$options
    for (let key in mixins) {
      let mixinKey = '$' + key
      if (options[key]) {
        this[mixinKey] = options[key]
      }
      else if (options.parent && options.parent[mixinKey]) {
        this[mixinKey] = options.parent[mixinKey]
      }
    }
  }
})

let proto = {}

proto._init = function () {
  this.options = Object.assign({}, mixins)
  this.props = {}
}

proto.set = function (key, value) {
  this.props[key] = value
}

proto.store = function (modules) {
  if (modules) {
    this.options.store = createStore(modules)
  }
  else {
    return this.options.store
  }
}

proto.router = function (options) {
  if (options) {
    this.options.router = createRouter(options)
  }
  else {
    return this.options.router
  }
}

proto.on = function (event, handler) {
  this.options[event] = handler
}

proto.plugin = function (factory) {
  Vue.use(factory)
}

proto.start = function () {
  new Vue(Object.assign(this.options, {
    el: '#app',
    render: h => h(App, { props: this.props })
  }))
}

function Vuexpress() {
  this._init()
}

Vuexpress.prototype = proto

Vuexpress.prototype.constructor = Vuexpress

export { mixins }

export default Vuexpress
