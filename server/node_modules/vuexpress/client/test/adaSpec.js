import vuex from 'vuex'
import VueRouter from 'vue-router'
import Vuexpress from '../lib/vuexpress'

describe('vuexpress', () => {

  let app

  beforeEach(() => {
    app = new Vuexpress
    let element = document.createElement('div')
    element.setAttribute('id', 'app')
    document.body.appendChild(element)
  })

  afterEach(() => {
    let element = document.querySelector('#app')
    if (element) {
      document.body.removeChild(element)
    }
  })

  it('app.set is used to pass props to app.vue', () => {
    expect(app.set).toEqual(jasmine.any(Function))
  })

  it('app.store is getter/setter', () => {
    expect(app.store).toEqual(jasmine.any(Function))
    expect(app.store()).toBeUndefined()
    app.store({})
    expect(app.store()).toEqual(jasmine.any(vuex.Store))
  })

  it('app.router is getter/setter', () => {
    expect(app.router).toEqual(jasmine.any(Function))
    expect(app.router()).toBeUndefined()
    app.router({})
    expect(app.router()).toEqual(jasmine.any(VueRouter))
  })

  it('app.on is alias for vue global hook', () => {
    expect(app.on).toEqual(jasmine.any(Function))
    const spyBeforeCreate = jasmine.createSpy('beforeCreate')
    const spyCreated = jasmine.createSpy('created')
    app.on('beforeCreate', spyBeforeCreate)
    app.on('created', spyCreated)
    expect(spyBeforeCreate).not.toHaveBeenCalled()
    expect(spyCreated).not.toHaveBeenCalled()
    app.router({}) // TODO need a default router config or disable router by defaut
    app.start()
    expect(spyBeforeCreate).toHaveBeenCalled()
    expect(spyCreated).toHaveBeenCalled()
  })

  it('app.plugin is alias for vue.use', () => {
    expect(app.plugin).toEqual(jasmine.any(Function))
  })

  it('app.start is use to start app', () => {
    expect(app.start).toEqual(jasmine.any(Function))
  })

})
