import vuex from 'vuex'
import createStore from '../lib/store'

describe('store', () => {

  it('createStore', () => {
    let store = createStore({})
    expect(store).toEqual(jasmine.any(vuex.Store))
  })

  it('namespaced is enable default', () => {
    let store = createStore({
      foo: {
        state: {
          bar: 'barz'
        }
      }
    })
    expect(store._modulesNamespaceMap['foo/']).not.toBeUndefined()
  })

  it('disable namespaced programmly', () => {
    let store = createStore({
      foo: {
        namespaced: false,
        state: {
          bar: 'barz'
        }
      }
    })
    expect(store._modulesNamespaceMap['foo/']).toBeUndefined()
  })

  it('update mutation is add default', () => {
    let store = createStore({
      foo: {
        state: {
          bar: 'barz'
        }
      }
    })
    expect(store._mutations['foo/update']).toEqual(jasmine.any(Array))
    expect(store._mutations['foo/update1']).toBeUndefined()
  })

  it('update action is add default', () => {
    let store = createStore({
      foo: {
        state: {
          bar: 'barz'
        }
      }
    })
    expect(store._actions['foo/update']).toEqual(jasmine.any(Array))
    expect(store._actions['foo/update1']).toBeUndefined()
  })

  it('update mutation/action', () => {
    let store = createStore({
      foo: {
        state: {
          bar: 'barz'
        }
      }
    })

    expect(store.state.foo.bar).toBe('barz')

    store.dispatch('foo/update', {
      bar: 'barzzz',
      qux: 'qux'
    })

    expect(store.state.foo.bar).toBe('barzzz')
    expect(store.state.foo.qux).toBeUndefined()
  })

})
